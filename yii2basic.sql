-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Апр 22 2023 г., 07:03
-- Версия сервера: 8.0.30
-- Версия PHP: 7.4.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `yii2basic`
--

-- --------------------------------------------------------

--
-- Структура таблицы `auth_assignment`
--

CREATE TABLE `auth_assignment` (
  `item_name` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `user_id` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `created_at` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;

--
-- Дамп данных таблицы `auth_assignment`
--

INSERT INTO `auth_assignment` (`item_name`, `user_id`, `created_at`) VALUES
('admin', '153', 1559459263),
('admin', '172', NULL),
('student', '154', 1559459263),
('student', '157', 1559459263),
('student', '158', 1559459263),
('student', '159', 1559459263),
('student', '160', 1559459263),
('student', '161', 1559459263),
('student', '165', 1559459263),
('student', '166', 1559459263),
('student', '167', 1559459263),
('student', '168', 1559459263),
('student', '179', 1559459263),
('student', '210', 1559459263),
('student', '212', 1559459263),
('student', '213', 1559459263),
('teacher', '152', 1559459263),
('teacher', '155', 1559459263),
('teacher', '156', 1559459263),
('teacher', '164', 1559459263),
('teacher', '169', 1559459263),
('teacher', '170', 1559459263),
('teacher', '173', 1559459263),
('teacher', '174', 1559459263),
('teacher', '175', 1559459263),
('teacher', '176', 1559459263),
('teacher', '177', 1559459263),
('teacher', '178', 1559459263),
('teacher', '180', 1559459263),
('teacher', '181', 1559459263),
('teacher', '182', 1559459263),
('teacher', '183', 1559459263),
('teacher', '184', 1559459263),
('teacher', '185', 1559459263),
('teacher', '186', 1559459263),
('teacher', '188', 1559459263),
('teacher', '208', 1559459263),
('teacher', '209', 1559459263),
('teacher', '211', 1559459263),
('teacher', '218', 1559459263),
('teacher', '219', 1559459263),
('worker', '162', 1559459263),
('worker', '163', 1559459263),
('worker', '187', 1559459263),
('worker', '3', 1559459263);

-- --------------------------------------------------------

--
-- Структура таблицы `auth_item`
--

CREATE TABLE `auth_item` (
  `name` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `type` smallint NOT NULL,
  `description` text CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `rule_name` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `data` blob,
  `created_at` int DEFAULT NULL,
  `updated_at` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;

--
-- Дамп данных таблицы `auth_item`
--

INSERT INTO `auth_item` (`name`, `type`, `description`, `rule_name`, `data`, `created_at`, `updated_at`) VALUES
('admin', 1, 'Администратор', NULL, NULL, 1559458802, 1559458802),
('student', 3, 'Студент', NULL, NULL, 1559458802, 1559458802),
('teacher', 2, 'Преподаватель', NULL, NULL, 1559458802, 1559458802),
('worker', 4, 'Сотрудник', NULL, NULL, 1559458802, 1559458802);

-- --------------------------------------------------------

--
-- Структура таблицы `auth_item_child`
--

CREATE TABLE `auth_item_child` (
  `parent` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `child` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `auth_rule`
--

CREATE TABLE `auth_rule` (
  `name` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `data` blob,
  `created_at` int DEFAULT NULL,
  `updated_at` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `briefing`
--

CREATE TABLE `briefing` (
  `id_briefing` int NOT NULL,
  `description` text NOT NULL,
  `datel` date NOT NULL,
  `lektor` varchar(255) NOT NULL,
  `id_passage` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `briefing`
--

INSERT INTO `briefing` (`id_briefing`, `description`, `datel`, `lektor`, `id_passage`) VALUES
(1, 'Работа с сервером Баз данных', '2022-06-26', 'ст. инженер  Майоров М.М.', 1);

-- --------------------------------------------------------

--
-- Структура таблицы `comment`
--

CREATE TABLE `comment` (
  `id_comment` int NOT NULL,
  `id_sotrudnik` int DEFAULT NULL,
  `id_work` int DEFAULT NULL,
  `textm` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `company`
--

CREATE TABLE `company` (
  `id_company` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `address` varchar(255) NOT NULL,
  `lider` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `company`
--

INSERT INTO `company` (`id_company`, `name`, `address`, `lider`) VALUES
(1, 'ООО УК «Рембытстройсервис»', 'г. Биробиджан, ул. Миллера 9 а', 'Мюллер Степан Семенович'),
(2, 'ОАО \"Энергосбыт\"', 'г. Биробиджан, ул. Советская 40', 'нач. отдела инф. Петров П.П.'),
(3, 'ООО \"Эпиграф\"', 'г. Биробиджан, ул. Советская 48', 'спец. бух. Максимова М.М.'),
(4, 'Комитет образования ЕАО', 'г. Биробиджан, ул. Шолом-Алейхема 30', 'Сергиенко А.В.'),
(5, 'Департамент управления сельским хозяйством ЕАО', 'г. Биробиджан, ул. Вознесения, д. 25', 'директор Вознесенов В.В.');

-- --------------------------------------------------------

--
-- Структура таблицы `department`
--

CREATE TABLE `department` (
  `id_department` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `id_faculty` int NOT NULL,
  `yearn` int NOT NULL,
  `yeark` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `department`
--

INSERT INTO `department` (`id_department`, `name`, `id_faculty`, `yearn`, `yeark`) VALUES
(1, 'Кафедра информационных систем, математики и правовой информатики', 1, 2018, 2030),
(2, 'Кафедра технических дисциплин', 1, 2018, 2030),
(3, 'Кафедра европейских и восточных языков', 4, 2018, 2030),
(4, 'Кафедра истории, архивоведения и правовых учений', 4, 2018, 2030),
(5, 'Кафедра государственно-правовых и уголовных дисциплин', 5, 2018, 2030),
(8, 'Кафедра права', 5, 2018, 2030),
(9, 'Кафедра сервиса, рекламы и социальной работы', 6, 0, 0),
(10, 'Кафедра физической культуры и туризма', 6, 0, 0),
(11, 'Кафедра изобразительного искусства и дизайна', 6, 0, 0),
(12, 'Кафедра психологии', 3, 0, 0),
(13, 'Кафедра педагогики', 3, 0, 0),
(14, 'Кафедра коррекционной педагогики, психологии и логопедии', 3, 0, 0),
(17, 'Кафедра филологии и журналистики', 4, 0, 0),
(18, 'Кафедра географии, экологии и природоохранного права', 5, 0, 0),
(19, 'Кафедра экономики, управления и финансового права', 5, 0, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `dostups`
--

CREATE TABLE `dostups` (
  `id_dostups` int NOT NULL,
  `yearn` int NOT NULL DEFAULT '0',
  `yeark` int NOT NULL DEFAULT '0',
  `id_department` int NOT NULL DEFAULT '0',
  `id_sotrudnik` int NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `dostups`
--

INSERT INTO `dostups` (`id_dostups`, `yearn`, `yeark`, `id_department`, `id_sotrudnik`) VALUES
(17, 2018, 2030, 12, 4),
(29, 2021, 2031, 10, 4),
(30, 2011, 2012, 1, 4),
(38, 2018, 2022, 14, 4),
(39, 2022, 2032, 19, 4),
(40, 2020, 2023, 1, 30);

-- --------------------------------------------------------

--
-- Структура таблицы `edication`
--

CREATE TABLE `edication` (
  `id_edication` int NOT NULL,
  `id_student` int DEFAULT NULL,
  `typeobuch` enum('Y','N') DEFAULT NULL,
  `id_specialty` varchar(255) DEFAULT NULL,
  `yearn` int DEFAULT NULL,
  `yeark` int DEFAULT NULL,
  `status` enum('Y','N','Z') DEFAULT NULL,
  `institute` varchar(255) DEFAULT NULL,
  `address` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `faculty`
--

CREATE TABLE `faculty` (
  `id_faculty` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `yearn` int DEFAULT NULL,
  `yeark` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `faculty`
--

INSERT INTO `faculty` (`id_faculty`, `name`, `yearn`, `yeark`) VALUES
(1, 'Факультет математики, информационных систем и техники', 2018, 2030),
(2, 'Факультет информационных и промышленных технологий программ среднего профессионального образования', 2018, 2030),
(3, 'Факультет педагогики и психологии - центр педагогического образования', 2018, 2030),
(4, 'Факультет филологии, истории и журналистики', 2018, 2030),
(5, 'Факультет экономики,экологии и права', 2018, 2030),
(6, 'Факультет социально-культурной деятельности и сервиса', 2018, 2030),
(7, 'Промышленно-экономический факультет программ среднего профессионального образования', 2018, 2030);

-- --------------------------------------------------------

--
-- Структура таблицы `gruppa`
--

CREATE TABLE `gruppa` (
  `id_gruppa` int NOT NULL,
  `name` int NOT NULL DEFAULT '0',
  `id_department` int NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `gruppa`
--

INSERT INTO `gruppa` (`id_gruppa`, `name`, `id_department`) VALUES
(1, 1781, 1),
(2, 1782, 1),
(3, 1783, 5),
(4, 1784, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `migration`
--

CREATE TABLE `migration` (
  `version` varchar(180) NOT NULL,
  `apply_time` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `migration`
--

INSERT INTO `migration` (`version`, `apply_time`) VALUES
('m000000_000000_base', 1551396366),
('m140506_102106_rbac_init', 1559457485),
('m170907_052038_rbac_add_index_on_auth_assignment_user_id', 1559457485),
('m180523_151638_rbac_updates_indexes_without_prefix', 1559457485),
('m181226_051819_DB1', 1551396371),
('m181226_060856_DB2', 1551396371),
('m181226_061152_DB3', 1551396371),
('m181228_045714_DB4', 1551396371),
('m190111_224254_DB5', 1551396371),
('m190111_225208_DB6', 1551396448),
('m190206_013521_DB14', 1551396555);

-- --------------------------------------------------------

--
-- Структура таблицы `news`
--

CREATE TABLE `news` (
  `id_news` int NOT NULL,
  `id_category` int NOT NULL,
  `dater` date NOT NULL,
  `titletext` varchar(255) NOT NULL,
  `id_sotrudnik` int NOT NULL,
  `datee` date NOT NULL,
  `fulltext` text NOT NULL,
  `annot` text NOT NULL,
  `teg` varchar(255) NOT NULL,
  `imgmain` varchar(255) NOT NULL,
  `reader` enum('Y','N') NOT NULL DEFAULT 'Y'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `news`
--

INSERT INTO `news` (`id_news`, `id_category`, `dater`, `titletext`, `id_sotrudnik`, `datee`, `fulltext`, `annot`, `teg`, `imgmain`, `reader`) VALUES
(1, 0, '2022-06-22', 'Регистрация на сайте', 0, '0000-00-00', '<p>В адресной строке браузерf вводим сетевой адрес веб-портала <a href=\"http://turbolib.ru/\">http://turbolib.ru</a> . Появляется главная веб-страница, на которой необходимо нажать на кнопку «Вход»\r\n</p>\r\n<p><img src=\"https://turbolib.ru/avs/news/62b8faa52beed.jpg\" style=\"border:1px solid #000000\">\r\n</p>Затем указываем логин и пароль\r\n<p>для доступа в систему:\r\n</p>\r\n<p><img src=\"https://turbolib.ru/avs/news/62b8faba6b1a0.jpg\" style=\"border:1px solid #000000\">\r\n</p>\r\n<p><span class=\"redactor-invisible-space\"><span class=\"redactor-invisible-space\">После авторизации в\r\nверхнем левом углу экрана появляется меню:\r\n	</span></span>\r\n</p>\r\n<p><span class=\"redactor-invisible-space\"><img src=\"https://turbolib.ru/avs/news/62b8fad36a9a8.jpg\" style=\'border:1px solid #000000\'><span class=\"redactor-invisible-space\"></span><br></span>\r\n</p>', '<p>Описание регистрации пользователей на сайте</p>', 'регистрация, пользователя, вход в систему', '', 'Y'),
(2, 0, '2022-06-07', 'Просмотр студентов закрепленных за кафедрой', 0, '0000-00-00', '<p>Администратор системы закрепляет кафедры за ответственным лицом. Список закрепленных кафедр отображается в профиле учетной записи, при нажатие на кнопку «Мой профиль». Ниже представлен пример профиля:\r\n</p>\r\n<p><img src=\"https://turbolib.ru/avs/news/62b8fb55d0c0c.jpg\" style=\'border:1px solid #000000\'><span class=\"redactor-invisible-space\"></span>\r\n</p>\r\n<p>В зависимости от доступных специальностей по профилю учетной записи, отображаются закрепленные студенты одной, либо нескольких кафедр. Список студентов можно получить нажав на кнопку «Деятельность», а затем выбрать «Список студентов». Для поиска студента используется три фильтра: по фамилии, специальности и году выпуска. Необходим напечатать фамилию или выбрать соответствующий пункт полей «специальность» или «год выпуска», затем нажать на кнопку «найти». Ниже показан поиск по специальности:\r\n</p>\r\n<p><img src=\"https://turbolib.ru/avs/news/62b8fb6c444fc.jpg\" style=\'border:1px solid #000000\'>\r\n</p>\r\n<p>Поиск по году выпуска:\r\n</p>\r\n<p><img src=\"https://turbolib.ru/avs/news/62b8fb7f3a03d.jpg\" style=\'border:1px solid #000000\'>\r\n</p>\r\n<p><br>\r\n</p>\r\n<p><br>\r\n</p>', '<p>Описание просмотра студентов закрепленных за учетной записью<span></span><br></p>', 'студент, поиск, кафедра', '', 'Y'),
(3, 0, '2022-06-27', 'Работа с данными студентов кафедры', 0, '0000-00-00', '<p>Для работы с данными студентам используются кнопки: «изменить профиль», «достижения», «публикации» и «образование».\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fc246ba70.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>Вначале необходимо проверить данные студента, внести год поступления и год окончания вуза. Если необходимо в будущем предоставить доступ студента к системе, то указывается его почтовый ящик и сообщается администратору о предоставление удаленного доступа для добавления информации о достижениях, публикациях и образовании. На данной форме возможно прикрепить фотографии студента, с помощью кнопки «Выберите файл»\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fc3c1b3dd.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>В случае, если студента нет в списке, то на сайте выбираем «Деятельность» а далее «Добавить студента».\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fc5490ee1.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>Заполняем «Фамилия Имя Отчество», код текущей специальности, год поступления и окончания, необязательные поля мобильный телефон, электронная почта и фотография. <br>\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fc9272dc3.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>Далее нажимаем на кнопку сохранить. Ниже показан пример добавления фотографии студента:\r\n</p><p><span></span>\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fcc2b45ee.jpg\" style=\"border:1px solid #000000\">\r\n</p><p><strong>В случае, если появляется ошибка, что студент с такой фамилией, именем и отчеством присутствует в системе, то необходимо администратору сайта сообщить о данной проблеме. Администратор проверит данные и самостоятельно добавит данные студента.</strong>\r\n</p><p><br><br>\r\n</p><p><br><br>\r\n</p><p><br><br>\r\n</p><p><br><br>\r\n</p>', '<p>Описание для работы с данными студентов</p>', 'данные, студент, кафедра', '', 'Y'),
(4, 0, '2022-06-27', 'Добавление диплома студента', 0, '0000-00-00', '<p>Для добавления\r\nдиплома студента, необходимо нажать на кнопку \"ПУБЛИКАЦИИ\".\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fd7eec3a4.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>Затем нажать на\r\nкнопку \r\n	<img src=\"https://turbolib.ru/avs/news/62b9051a944d5.jpg\">.\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b8fd90a3306.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>Указываем следующие данные:\r\n</p><ol>\r\n	<li>Название диплома или магистерской диссертации,</li>\r\n	<li>Руководить диплома или магистерской диссертации (<strong>Фамилия И. О., научная степень, научное звание</strong>)</li>\r\n	<li>Дата защиты диплома или магистерской диссертации</li>\r\n	<li>Вид публикации (выбор следующих значений: <strong>диплом, диссертация</strong>)</li>\r\n	<li>Специальность (выбор следующих значений: <strong>диплом, диссертация</strong>)</li>\r\n	<li>Оценка (выбор следующих значений: <strong>удовлетворительно, хорошо, отлично</strong>).</li>\r\n</ol><p><em><strong>Примечание: Если Вы хотите временно сохранить запись без добавления данных и загрузки файлов необходимо для сохранения заполнить обязательные поля: Название публикации, Дата защиты, Вид Публикации и нажать кнопку \"Сохранить\"</strong></em></p><p><img src=\"https://turbolib.ru/avs/news/62b8fdb2e9e2b.jpg\" style=\"border:1px solid #000000\"><br>\r\n</p><p>Если производилась самостоятельная проверка на антиплагиат, то отмечается на веб-странице в поле  <img src=\"https://turbolib.ru/avs/news/62b9009984391.jpg\" style=\"border:1px solid #000000\">.<br>\r\n</p><p>В поле ввода «Оригинальность» заноситься числовое значение от 1 до 100 %.\r\n</p><p>В поле «файл проверки» загружается файл проверки на антиплагиат в формате pdf.\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b900d18d255.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>В строке \"Текущий файл антиплагиата\" выводится имя загруженного файл при редактировании данных публикации (отображается при редактировании публикации).\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b9018679ea6.jpg\" style=\"border:1px solid #000000\">\r\n</p><p><em><strong>Примечание: В силу большого объема передаваемых данных, рекомендуется указывать один pdf-файл и нажимать кнопку \"Сохранить. Затем переходить к обновлению записи и продолжать добавлять следующие файлы.</strong></em></p><p>Далее загружается файл в поле \"Файл диплома/публикации (формат pdf)\"\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b901fc26919.jpg\" style=\"border:1px solid #000000\">\r\n</p><p>Далее загружается файл в поле \"Файл отзыва (формат pdf)\"<br>\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b9039beee16.jpg\" style=\"border:1px solid #000000\"><br>\r\n</p><p>Далее загружается файл в поле \"Файл рецензии (формат pfd)\"\r\n</p><p><img src=\"https://turbolib.ru/avs/news/62b903eaa2ebe.jpg\" style=\"border:1px solid #000000\">\r\n</p><p><strong>Остальные поля заполнятся по необходимости</strong>\r\n</p><p><strong>Далее производиться сохранения публикации в системе \"ВКР ВУЗ\"</strong>\r\n</p><p><strong></strong>\r\n</p><p><strong><img src=\"https://turbolib.ru/avs/news/62b90489a1d27.jpg\" style=\"border:1px solid #000000\"></strong></p>', '<p>Описание добавление дипломов студентов\r\n</p>', 'добавление, диплом, диссертация, студент', '', 'Y');

-- --------------------------------------------------------

--
-- Структура таблицы `passage`
--

CREATE TABLE `passage` (
  `id_passage` int NOT NULL,
  `id_student` int NOT NULL,
  `id_department` int NOT NULL,
  `id_company` int NOT NULL,
  `position` varchar(255) NOT NULL,
  `conclusion` text NOT NULL,
  `characteristic` text NOT NULL,
  `report` text NOT NULL,
  `lider` varchar(255) NOT NULL,
  `id_sotrudnik` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `id_practice` int NOT NULL,
  `dated` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `passage`
--

INSERT INTO `passage` (`id_passage`, `id_student`, `id_department`, `id_company`, `position`, `conclusion`, `characteristic`, `report`, `lider`, `id_sotrudnik`, `name`, `id_practice`, `dated`) VALUES
(3, 5, 1, 1, 'практикант', '<p style=\"text-align: center;\">ыфва\r\n</p><p>фыва\r\n</p><p>фыв\r\n</p><p>аф\r\n</p><p>ыв\r\n</p><p>аф\r\n</p><p>ывафыв\r\n</p><p>ВАывафывафывафывфыафыва\r\n</p><p>фывафы\r\n</p><p>ва\r\n</p><p>ф\r\n</p> dfsdf<table>\r\n<tbody><tr></tr>\r\n</tbody></table>', 'sdfasdf', 'sdfasdfasd', 'Глаголев', 0, 'Приказ 234-1', 0, '0000-00-00'),
(4, 5, 1, 1, 'ывафыв', '<p>фывафыв</p>', 'ывафыв', 'фыва', 'ыфавфы', 0, '24-1', 0, '0000-00-00'),
(6, 137, 1, 1, 'Практикант', '<p>1. Анализ деятельности предприятия\r\n</p><p>2. Построение схемы работы предприятия\r\n</p><p>3. Выделение и рассмотрение одного из бизнес- процессов деятельности\r\n</p>', '<p style=\"text-align: center;\"><strong>ХАРАКТЕРИСТИКА</strong></p><p style=\"text-align: center;\">студента Черкашина Александра Михайловича</p><p style=\"text-align: center;\">по результатам прохождения производственной практики</p><p style=\"text-align: justify;\">Настоящим подтверждаю, что Черкашин Александр Михайлович, проходил производственную практику в ОГАОУ ДПО «Институт развития образования Еврейской автономной области» с 31 мая по 26 июня 2021 года. </p><p style=\"text-align: justify;\"><strong>Результаты работы</strong></p><p style=\"text-align: justify;\">За время прохождения практики Черкашин Александр зарекомендовал себя как ответственный работник. Во время практики Александр разрабатывал WEB-интерфейс для работы с готовой базой данных.</p><p style=\"text-align: justify;\"><strong>Личные и деловые качества (компетенции)</strong></p><p style=\"text-align: justify;\">Черкашин Александр проявил себя с положительной стороны как работоспособный, ответственный, стремящийся к получению знаний, навыков и умений, необходимых в профессиональной деятельности. Легко справляется с заданиями поставленными руководством института. Умело применяет теоретические знания, полученные в период обучения в практической деятельности.</p><p style=\"text-align: justify;\">За время прохождения практики у Александра выработалась способность распределения и оценки времени на поставленную задачу. </p><p style=\"text-align: justify;\">Считаю, что Черкашин Александр умеет находить творческий подход к решению нестандартных задач.</p><p style=\"text-align: justify;\"><strong>Рекомендации</strong></p><p style=\"text-align: justify;\">В целом могу охарактеризовать Черкашина Александра, как отличного работника и перспективного сотрудника.</p><p style=\"text-align: justify;\">Оценка отлично</p><p style=\"text-align: right;\">Подпись ____________________</p><p style=\"text-align: right;\"> М.П.</p><p style=\"text-align: right;\">Руководитель практики Черкашин М. О.</p>', '<p style=\"text-align: center;\"><strong>ОГЛАВЛЕНИЕ</strong>\r\n</p><p style=\"text-align: center;\"><strong>ВВЕДЕНИЕ </strong>\r\n</p><p style=\"text-align: center;\"><strong>АНАЛИТИЧЕСКАЯ ЧАСТЬ</strong>\r\n</p><p><strong>1.1 Анализ и описание организационной структуры Приамурского государственного университета им. Шолом-Алейхема</strong>\r\n</p><p><strong>1.2 Анализа бизнес-процесса</strong>\r\n</p><p>1.3 Анализ используемой системы\r\n</p><p>1.4 Рекомендации\r\n</p><p style=\"text-align: center;\"><strong>Введение</strong>\r\n</p><p><strong>Целью учебной практики</strong> является проведение анализа уровня информатизации в информационной структуре, отвечающей за предоставление учебной информации субъектам школы, в частности для обучающихся, учителей и рабочего персонала.\r\n</p><p style=\"text-align: center;\"><strong>Задача учебной практики:</strong>\r\n</p><ul>\r\n	<li>подготовка к работе по специальности; </li>\r\n	<li>получение навыков работы с техникой и специализированным программным обеспечением;</li>\r\n	<li>умение документировать свою работу;</li>\r\n	<li>соблюдение правил техники безопасности и санитарных норм;</li>\r\n	<li>овладение правильными приемами работы.</li>\r\n</ul><p><strong>Объектом практики</strong> выступает отдел приёмной комиссии Приамурского государственного университета им. Шолом-Алейхема.\r\n</p><p><strong>Предметом практики</strong> является проведение анализа уровня информатизации Приамурского государственного университета им. Шолом-Алейхема.\r\n</p><p>                    1. Аналитическая часть\r\n</p><p>1.1 Анализ и описание организационной структуры Приамурского государственного университет им. Шолом-Алейхема\r\n</p><p>Приамурский государственный университет имени Шолом-Алейхема – это современный образовательный комплекс с развитой инфраструктурой, готовящий специалистов, востребованных в разных отраслях экономики и социокультурной сферы региона. По данным «Рейтинга востребованности вузов в РФ-2015», подготовленным проектом «Социальный навигатор» медиа-группы «Россия сегодня» при участии Центра исследования рынка труда, ФГБОУ ВО «ПГУ им. Шолом-Алейхема» занял 33 место в рейтинге востребованности вузов в РФ-2015 среди классических университетов.<br><a name=\"_Toc1194094284\"></a>\r\n</p><p>Сегодня университет – признанный региональный вуз по подготовке кадров для различных областей образования, науки и социально-экономической сферы, единственный многопрофильный вуз в Еврейской автономной области, осуществляющий многоуровневую подготовку по основным и дополнительным образовательным программам. Ежегодно университет осуществляет обучение по различным программам повышения квалификации более 200 человек, переподготовку от 50 до 100 человек.\r\n</p><p>Свыше трех тысяч студентов и аспирантов обучается на семи факультетах: факультет математики, информационных технологий и техники; факультет сервиса, рекламы и социальной работы, факультет филологии, истории и журналистики, факультет педагогики и психологии - центр педагогического образования, факультет экономики, экологии и права, промышленно-экономический факультет программ среднего профессионального образования, факультет информационных и промышленных технологий программ среднего профессионального образования.\r\n</p><p>Подготовку и выпуск специалистов осуществляют 15 кафедр и 10 предметно-цикловых комиссий. Структура вуза также включает в себя научно-образовательные и исследовательские центры, лаборатории, творческие студии и клубы. На базе вуза действует лицей.\r\n</p><p>Большое внимание в университете уделяется научно-исследовательской работе студентов. Проводятся ежегодные конкурсы студенческих научных работ и студенческие научные конференции, в которых принимают участие до 700 человек. По результатам конференций публикуются сборники статей. Ежегодно студенты университета отмечаются дипломами, премиями, призами, грамотами об участии в конкурсах, конференциях и выставках различного уровня. Из года в год растет публикационная активность студентов.\r\n</p><p><strong><i>1.2 Анализ бизнес процесса.</i></strong><strong><i></i></strong></p><p>Приемная комиссия ПГУ осуществляет свою деятельность на основании:</p><p>Закона Российской Федерации «Об образовании»; </p><p>ФедеральногозаконаРоссийскойФедерации «Овысшеми послевузовском образовании»;</p><p>«Порядка приема в государственные образовательные учреждения высшего профессионального образования (высшие учебные заведения) РФ, учрежденные федеральными органами исполнительной власти» (утвержден приказом Минобразования России № 50 от 14.01.2003 г., зарегистрирован Минюстом России 06.02.2003 г., регистрационный № 4188);</p><p>«ПоложенияопроведенииЕГЭ (утвержденоприказом </p><p>Минобразования России № 1306 от 09.04.2002 г., зарегистрировано Минюстом России 09.04.2002 г., регистрационный № 3420);</p><p>«Рекомендаций по организации приема и разработке правил приема в образовательныеучреждениясреднегоивысшегопрофессионального образования, участвующиевэкспериментеповведениюединого государственного экзамена в 2006 году» (письмо Федеральной службы по надзору в сфере образования и науки (Рособрнадзора) от 22.03.2006 г. № 01- 148/08-01).</p><p>Инструкции об организации работы приёмной комиссии, технического персонала и делопроизводства по приему документов от абитуриентов, заполнению бланочных материалов для личного дела абитуриента, их компьютерной обработке и проведению вступительных испытаний, зачисления и передаче документов в студенческий отдел кадров.</p><p>Инструкция предназначена для членов приемной комиссии (ПК) и членов отборочных комиссий (ОК) факультетов (отв. секретарей ПК и ОК, их заместителей и технического персонала). Инструкция содержит положения, регламентирующие деятельность ПК и ОК в процессе подготовки, проведения и обработки результатов вступительных испытаний и зачисления абитуриентов. Приём документов и их передача в ПК. Общие положения. Отв. секретарями ПК и ОК, и их заместителями могут быть только штатные преподаватели академии.</p><p>Члены ПК и ОКдолжны руководствоваться в своей деятельности требованиями основных документов, определяющих, процедуры подготовки и проведениявступительныхиспытаний, порядокподачиирассмотрения апелляции и зачисления абитуриентов на конкурсной основе. Правила приема ПГУ утверждаются ректором.</p><p>ЧленыПКи ОК несут ответственность за неисполнение или ненадлежащее исполнение возложенных на них обязанностей в соответствии с действующим законодательством. Назначение отв.секретаряПКиотв.секретарей ОКфакультетов осуществляется приказом ректора университета. Управление проведением всех процедур работы ПК и ОК ведет отв. секретарь ПК и несет ответственность за их результаты. Назначение и обучение членов ОК и технических секретарей</p><p>Состав членов ОК утверждается ректором университета. Технические работники (операторы ЭВМ) назначаются из числа студентов 3 и 4 -го курса обучающихся по специальности «Управление персоналом» и проходящих учебную практику на тему «Делопроизводство».</p><p>Задачи: Прием документов, их обработка, ввод в базу данных (БД) «Факультет», и Передача их в центральную базу данных «Абитуриент» ответственному за Поток члену ПК. Получение результатов вступительных испытаний в виде Индивидуальных конвертов и экзаменационных листов, подготовка личных дел и их передача в студенческий отдел кадров.</p><p>На Госуслугах заработал обновлённый супер-сервис «Поступление в вуз онлайн». Подать документы с помощью супер-сервиса можно более чем в 500 вузов — на очное, очное-заочное и целевое обучение.\r\n</p><p>Что такое супер-сервис «Поступление в вуз онлайн»: Супер-сервис поможет абитуриентам подать документы в вузы без личного посещения приёмных комиссий, бумажных заявлений и очередей. Не выходя из-за компьютера, абитуриенты смогут:\r\n</p><p>• выбрать вузы и конкурсные группы для поступления\r\n</p><p>• заполнить заявление и отправить его в вузы\r\n</p><p>• узнать расписание вступительных экзаменов и записаться на них\r\n</p><p>• следить за своим местом в конкурсных списках\r\n</p><p>• внести изменения в заявление, пока идет приём документов\r\n</p><p>• подать или отозвать согласие на зачисление\r\n</p><p>• узнать о зачислении, получив уведомление от вуза\r\n</p><p>Все эти функции доступны прямо на Госуслугах и не требуют посещения вуза.\r\n</p><p>Как отправить документы в вузы:\r\n</p><ul>\r\n	<li>Абитуриенту нужно зарегистрироваться на Госуслугах и заполнить заявление о приёме на обучение, приложив необходимые документы. Понадобятся сканы или фото свидетельств, подтверждающих индивидуальные достижения, которые учитываются при поступлении.</li>\r\n	<li>Оригинал аттестата в 2021 году для поступления в вуз не нужен. Его можно будет принести в вуз после зачисления — в течение первого года обучения.</li>\r\n	<li>При заполнении заявления нужно указать предметы, экзамены по которым абитуриент собирается сдавать или сдавал в прошлые годы. Если на момент подачи заявления окончательных результатов ЕГЭ-2021 ещё нет, они будут переданы в вуз автоматически, когда их опубликуют.</li>\r\n</ul><p>Как пройти вступительные испытания:\r\n</p><ul>\r\n	<li>Для поступления может понадобиться сдать в вузе вступительные экзамены — дополнительные к ЕГЭ или заменяющие их.</li>\r\n	<li>Дополнительные экзамены проводят вузы творческой, спортивной направленности, МГУ, СПбГУ, а также военные и ведомственные вузы.</li>\r\n	<li>Экзамены, заменяющие ЕГЭ, могут сдавать абитуриенты с инвалидностью, иностранные граждане, а также те, кто учился за рубежом или имеет профессиональное образование.</li>\r\n	<li>Госуслуги предупредят о расписании вступительных экзаменов и помогут записаться на них. Как будет проходить экзамен, узнавайте в вузе.</li>\r\n</ul><p>Как подать согласие на зачисление:\r\n</p><ul>\r\n	<li>Согласие на зачисление нужно подать в тот вуз, который выбрали для поступления. Документы для поступления абитуриент может подать в 5 вузов, однако поступить на бюджет можно только в один.</li>\r\n	<li>Отправить заявление о согласии на зачисление можно онлайн через суперсервис. Если передумали, согласие можно отозвать и подать заново в другой вуз. Так как это можно сделать ограниченное число раз, сервис предупредит о том, сколько попыток осталось.</li>\r\n	<li>Чтобы определиться с вузом, следите за изменениями в конкурсных списках в личном кабинете. Сервис предупредит, до какого числа можно подать согласие на зачисление, чтобы поступить по конкурсу.</li>\r\n	<li>Запросы поступающего: В основном данные запросы представляют из себя просьбу о зачислении, но иногда абитуриент может попросить вернуть документы, заменить или донести новые.</li>\r\n	<li>Набор документов поступающего: Паспорт, документ об образовании, СНИЛС, фотографии, заявление абитуриента. Документы, подтверждающие особые права при поступлении. Документы, подтверждающие индивидуальные достижения поступающего.</li>\r\n	<li>Административные документы: Перечень правил проведения приёмной компании.</li>\r\n	<li>Сотрудники приёмной комиссии: Каждый член приемной комиссии имеет роль в комиссии. Особо выделяются роли \"председатель\" приемной комиссии\" и \"ответственный секретарь\". Предполагается, что в Приемной комиссии может быть один председатель и один ответственный секретарь. Членов комиссии с другими ролями может быть несколько. Члены приёмной комиссии принимают документы поступающих и вносят их в список конкурса.</li>\r\n	<li>Используемая программа: 1С “Университет” позволяет вносить данные абитуриента в базу данных и автоматически рассчитать результаты конкурса.</li>\r\n	<li>Персональный компьютер</li>\r\n	<li>Результаты конкурса: Представляет из себя список зачисленных абитуриентов.</li>\r\n	<li>планирование приема (ввод перечня работников приёмной комиссии, составление перечня направлений и профилей подготовки, ввод плана приема, ввод расписания экзаменов);</li>\r\n	<li>прием документов (добавление, удаление и редактирование данных об абитуриенте, распределение абитуриента в экзаменационные группы, печать экзаменационных листов, печать регистрационных книг, подготовка статистики);</li>\r\n	<li>обеспечение удаленной подачи заявления через Интернет;</li>\r\n	<li>создание электронного личного дела абитуриента;</li>\r\n	<li>обработка результатов ЕГЭ;</li>\r\n	<li>автоматизированная проверка подлинности свидетельств ЕГЭ в Региональном центре обработки информации Федеральной базе свидетельств ЕГЭ;</li>\r\n	<li>обеспечение проведения экзаменов в традиционной форме (печать экзаменационных ведомостей, ввод итогов экзаменов, подготовка статистики, печать сводных ведомостей);</li>\r\n	<li>учет результатов вступительных испытаний;</li>\r\n	<li>обеспечение зачисления (установка проходного и непроходного баллов, зачисление абитуриентов, в автоматическом режиме, подготовка и печать проектов приказов, утверждение и печать утвержденных приказов);</li>\r\n	<li>статистическая обработка информации по итогам приема для анализа итогов приема с целью прогнозирования и подготовки процесса приема в университет будущего года;</li>\r\n	<li>автоматическое формирование приказов на зачисление;</li>\r\n	<li>вывод пофамильный список Online;</li>\r\n	<li>вывод отчётов на печать, для предоставления их в другие организации.</li>\r\n	<li>подготовка отчетов для предоставления во внешние организации.</li>\r\n</ul><p>Как абитуриенту узнать, поступил он или нет: Абитуриенты, которые прошли по конкурсу, получат оповещение от Госуслуг. Дальнейшие инструкции первокурсники получат в приёмной комиссии.\r\n</p><p>Работа приёмной комиссии имеет следующую модель (рис.1):\r\n</p><p>Рисунок 1 – Диаграмма верхнего уровня\r\n</p><p><i>Входящая информация:</i>\r\n</p><p><i>Управляющая информация:</i>\r\n</p><p><i>Механизмы:</i>\r\n</p><p><i>Выходная информация: </i>\r\n</p><p>Основной блок подразделяется на 3 подблока: «Обработка запросов и документов поступающего», «Обработка личного дела поступающего» и «Получение результатов конкурса». После обработки документов поступающего, полученные данные вносятся в базу данных и список конкурса. На основании сохранённых данных и правил конкурса выносится окончательный результат, т.е. список зачисленных абитуриентов. Более подробно функции отдела можно описать следующим образом (рис.2):\r\n</p><p>Рисунок 2 – Диаграмма основных функций\r\n</p><p><strong>1.3 <i>Анализ используемой системы</i></strong>\r\n</p><p>Программное обеспечение 1С: Университет создано разработчиками специально для высших учебных заведений разных государств, которые нуждаются в автоматизации учета. Прикладное решение способствует эффективной обработке, анализу, сохранению информации, которые необходимы для успешного функционирования государственного или коммерческого образовательного заведения. Платформа охватывает все сектора деятельности отрасли, начиная от приема документов абитуриента, продолжая трудоустройством кадров, оплатой обучения, выплатой зарплат и заканчивая организационными вопросами.\r\n</p><p>Система обладает широким инструментарием, который позволяет создавать группы для обучающихся, распределять нагрузку среди преподавателей, настраивать работу подразделений и отделов. Конфигурация поддерживает ФГОС ВО (3++), а также систему подготовки по уровням (бакалавры, магистры, аспиранты) и образовательным направлениям. Программа может быть применена для автоматизации рабочих мест членов коллектива в разных структурных подразделениях университета, включая:\r\n</p><p>Программа позволяет автоматизировать процесс принятия документов поступающих и добавление абитуриентов в список конкурса. Данные в системе можно корректировать, например, если абитуриент решил донести документы или поменять их. Программа способна сама автоматически вычислить результаты конкурса.Благодаря данной системе можно значительно сократить время работы приёмной комиссии и минимизировать различные ошибки и недочёты.\r\n</p><p>1.4<u> </u><strong><i>Рекомендации по улучшению системы</i></strong>\r\n</p><p>Программа 1С “Университет” является довольно многофункциональной системой, предоставляющей множество возможностей, однако она имеет свои недостатки. Из-за большого функционала система получилась довольно “громоздкой”, что несёт неудобства при обучении новых сотрудников, а также множество проблем и ошибок в системе. При обновлении платформы достаточно часто пользователи сталкиваются с тем, что лицензионные ключи перестают работать.Из-за отсутствия модульности также возникают дополнительные сложности, так как выявить все ошибки и отладить столь громоздкий программный продукт практически не реально. В результате постоянно выпускаются новые обновления. Одной из важных причин постоянных ошибок и ситуаций с ними является это отсутствие конкуренции. Так же к недостаткам можно отнести необходимость заказывать услуги поддержки 1С. Очень часто клиенту необходимо чтобы все вопросы и ошибки, которые возникают при работе с 1С (исправление ошибок в конфигурации, консультации персонала относительно работы с программой, установка обновлений программы) решались оперативно. В таких случаях вам не обойтись без услуг компаний, которые специализируются на настройке 1С. Или придётся работать 1С-программистом “фрилансером” и нанимать на работу специалиста, способного написать новый функциональный модуль или найти и исправить ошибки в написанном до него коде.\r\n</p><p><strong><i>1.5 Автоматизация деятельности приемной комиссии</i></strong>\r\n</p><p>Информационная система «Abituriento» - комплекс решений для автоматизации работы приемной комиссии. Среди основных задач, можно выделить:\r\n</p><p>Программа позволяет перенести данные абитуриентов в систему Деканат, где в дальнейшем эти данные будут использоваться другими системами. Основная работа приложения - заполнение справочников, создание приемных кампаний, прием заявлений, составление рейтингов, формирование экзаменационных ведомостей и групп, создание приказов и т.д. Также программа позволяет организовать удаленную регистрацию абитуриентов, в том числе и online подачу заявления для абитуриентов, вывод пофамильных списков и вывод экрана подачи заявлений. Приложение будет иметь взаимодействие с порталом государственных услуг. Данная программа позволит автоматизировать деятельность приёмной комиссии и сделать процесс приёма документов более быстрым и удобным как для абитуриента, так и для работника приёмной комиссии.\r\n</p>', 'Глаголев В.А.', 0, 'Приказ 4', 0, '0000-00-00'),
(7, 137, 1, 1, 'практикант', '<p style=\"text-align: center;\">Студент может пользоваться такими функциями информационной системы как:</p>  <ul><li>Авторизация;</li><li>Добавления образования;</li><li>Добавления карьеры;</li><li>Добавления и загрузка документов.</li></ul>        <p>В пользовании студента находиться функции, которые помогают ему для работы с отчетами практик, а также для работы с его личным кабинетом.</p>  <p>Преподаватель может использовать функции:</p>  <ul><li>Авторизация;</li><li>Регистрация студентов;</li><li>Проверка документов.</li></ul>      <p>Преподаватель в свою очередь занимается регистрацией студентов в информационной системе. Проверки сдачи отчетов практик, характеристики студента, отношений на практику и дневник практики. </p>', '<p>Студент может пользоваться такими функциями информационной системы как:</p>  <ul><li>Авторизация;</li><li>Добавления образования;</li><li>Добавления карьеры;</li><li>Добавления и загрузка документов.</li></ul>        <p>В пользовании студента находиться функции, которые помогают ему для работы с отчетами практик, а также для работы с его личным кабинетом.</p>  <p>Преподаватель может использовать функции:</p>  <ul><li>Авторизация;</li><li>Регистрация студентов;</li><li>Проверка документов.</li></ul>      <p>Преподаватель в свою очередь занимается регистрацией студентов в информационной системе. Проверки сдачи отчетов практик, характеристики студента, отношений на практику и дневник практики. </p>', '<p>Студент может пользоваться такими функциями информационной системы как:</p>  <ul><li>Авторизация;</li><li>Добавления образования;</li><li>Добавления карьеры;</li><li>Добавления и загрузка документов.</li></ul>        <p>В пользовании студента находиться функции, которые помогают ему для работы с отчетами практик, а также для работы с его личным кабинетом.</p>  <p>Преподаватель может использовать функции:</p>  <ul><li>Авторизация;</li><li>Регистрация студентов;</li><li>Проверка документов.</li></ul>      <p>Преподаватель в свою очередь занимается регистрацией студентов в информационной системе. Проверки сдачи отчетов практик, характеристики студента, отношений на практику и дневник практики. </p>', 'Глаголев ', 0, 'Приказ 256-1', 0, '0000-00-00'),
(8, 137, 1, 1, 'практикант', '<p>asdfas</p>', '<p>asdfasd</p>', '<p>sdfasdf</p>', 'Ukfusdfasdf', 0, '13а от 12.01.2021', 0, '0000-00-00'),
(9, 2792, 1, 1, 'практианта', '<p>ыфвафы</p>', '<p>ыфваф</p>', '<p>фыва</p>', 'ываф', 0, '12а от 12.01.2020', 0, '0000-00-00');

-- --------------------------------------------------------

--
-- Структура таблицы `portfolio`
--

CREATE TABLE `portfolio` (
  `id_portfolio` int NOT NULL,
  `progress` varchar(255) NOT NULL DEFAULT '0',
  `id_student` int NOT NULL DEFAULT '0',
  `type_work` varchar(255) NOT NULL DEFAULT '0' COMMENT 'Учебная деятельность',
  `dated` date NOT NULL DEFAULT '0000-00-00',
  `description` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `practice`
--

CREATE TABLE `practice` (
  `id_practice` int NOT NULL,
  `id_specialty` int NOT NULL,
  `id_typepractice` int NOT NULL,
  `daten` date NOT NULL,
  `datek` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `practice`
--

INSERT INTO `practice` (`id_practice`, `id_specialty`, `id_typepractice`, `daten`, `datek`) VALUES
(1, 6, 1, '2022-06-20', '2022-07-04'),
(3, 6, 2, '2022-10-01', '2022-10-31'),
(4, 6, 3, '2022-11-01', '2022-11-30');

-- --------------------------------------------------------

--
-- Структура таблицы `setting`
--

CREATE TABLE `setting` (
  `id_setting` int NOT NULL,
  `name` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `value` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Дамп данных таблицы `setting`
--

INSERT INTO `setting` (`id_setting`, `name`, `value`) VALUES
(2, 'worksite', 'Y'),
(3, 'urlworksite', '/news/12');

-- --------------------------------------------------------

--
-- Структура таблицы `sotrudnik`
--

CREATE TABLE `sotrudnik` (
  `id_sotrudnik` int NOT NULL,
  `surname` varchar(255) DEFAULT NULL,
  `FIOS` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `phone` varchar(255) DEFAULT NULL,
  `rukovoditel` enum('Y','N') DEFAULT NULL,
  `status` enum('Y','N') DEFAULT 'N',
  `typeu` enum('worker','teacher') DEFAULT NULL,
  `username` varchar(50) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `sotrudnik`
--

INSERT INTO `sotrudnik` (`id_sotrudnik`, `surname`, `FIOS`, `email`, `phone`, `rukovoditel`, `status`, `typeu`, `username`) VALUES
(4, 'Глаголев Владимир Александрович', 'Глаголев В.А.', 'glagolev_jar@mail.ru', '+79681370011', NULL, 'Y', 'teacher', 'gva'),
(30, 'Testov Test Testovich', 'Testov T.T', 'testov@mail.ru', '', NULL, 'Y', 'teacher', 'testov'),
(31, 'Testov2 Test Testovich', 'Testov2 T.T.', 'testov2@mail.ru', '', NULL, 'Y', 'teacher', 'testov2'),
(32, 'Петров Петр Петрович', 'Петров П.П,', 'petrov@mail.ru', '+796836262726', NULL, 'Y', 'teacher', 'petrov'),
(33, 'Тестов2 Тест2 Тестович2', 'Тестов2 Т.Т.', 'testov2@bk.test.ru', '+70000000000', NULL, '', 'teacher', 'testov2');

-- --------------------------------------------------------

--
-- Структура таблицы `specialty`
--

CREATE TABLE `specialty` (
  `id_specialty` int NOT NULL,
  `id_department` int NOT NULL,
  `name` varchar(255) NOT NULL,
  `number` varchar(8) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `specialty`
--

INSERT INTO `specialty` (`id_specialty`, `id_department`, `name`, `number`) VALUES
(1, 1, 'Прикладная математика и информатика, Общая направленность', '01.03.02'),
(2, 2, 'Строительство, направленность Промышленное и гражданское строительство', '08.03.01'),
(3, 2, 'Строительство, направленность Техническая эксплуатация и реконструкция зданий и сооружений', '08.04.01'),
(4, 1, 'Информационные системы и технологии', '09.03.02'),
(5, 1, 'Прикладная информатика, направленность Прикладная информатика в экономике', '09.03.03'),
(6, 1, 'Информационные системы и технологии', '09.04.02'),
(7, 2, 'Электроэнергетика и электротехника, направленность Электрооборудование и электрохозяйство предприятий, организаций и учреждений', '13.03.02'),
(8, 2, 'Электроэнергетика и электротехника, направленность Режимы работы электрических источников питания подстанций, сетей и систем', '13.04.02'),
(9, 2, 'Эксплуатация транспортно-технологических машин и комплексов, направленность автомобили и автомобильное хозяйство', '23.03.03'),
(10, 1, 'Педагогическое образование, направленность Математика', '44.03.01'),
(11, 1, 'ПО (Информатика и математика)', '44.03.05'),
(12, 1, 'ПО (Математическое образование)', '44.04.01'),
(13, 1, 'ПО (Информатика в образовании)', '44.04.01'),
(14, 9, 'Социальная работа', '39.03.02'),
(15, 9, 'Социальная работа', '39.04.02'),
(16, 9, 'Реклама и связи с общественностью', '42.03.01'),
(17, 9, 'Сервис', '43.03.01'),
(18, 9, 'Сервис', '43.04.01'),
(19, 10, 'ПО (Физическая культура и Безопасность жизнедеятельности)', '44.03.05'),
(20, 10, 'ПО (Физическая культура)', '44.03.01'),
(21, 11, 'Дизайн', '54.03.01'),
(22, 11, 'Дизайн', '54.04.01'),
(23, 11, 'ПО (Изобразительное искусство)', '44.03.01'),
(24, 12, 'Психология', '37.03.01'),
(25, 12, 'Психология', '37.04.01'),
(26, 13, 'ПО (Начальное образование)', '44.03.01'),
(27, 13, 'ПО (Дошкольное образование)', '44.03.01'),
(28, 13, 'ПО (Экспертная деятельность в сфере образования)', '44.04.01'),
(29, 13, 'ПО (Начальное образование и Иностранный язык)', '44.03.05'),
(30, 13, 'ПО (Начальное образование и Математика)', '44.03.05'),
(31, 13, 'ПО (Начальное образование и Изобразительное искусство)', '44.03.05'),
(32, 13, 'ПО (Начальное образование и Биология)', '44.03.05'),
(33, 1, 'Образование и педагогические науки', '44.06.01'),
(34, 14, 'Специальное (дефектологическое) образование', '44.03.03'),
(35, 14, 'Специальное (дефектологическое) образование', '44.04.03'),
(36, 4, 'История', '43.03.01'),
(37, 4, 'ПО (История)', '44.03.01'),
(38, 3, 'Лингвистика', '45.02.03'),
(39, 3, 'ПО (Русский язык как иностранный)', '44.04.01'),
(40, 3, 'ПО (Теория, практика и методика преподавания перевода)', '44.04.01'),
(41, 17, 'Журналистика', '42.03.02'),
(42, 17, 'Журналистика', '42.04.02'),
(43, 17, 'ПО (Русский язык)', '44.03.01'),
(44, 17, 'ПО (Русский язык и литература, Мировая художественная культура)', '44.03.05'),
(45, 17, 'ПО (Русский язык и литература, История)', '44.03.05'),
(46, 17, 'Языкознание и литературоведение', '45.06.01'),
(47, 1, 'Информатика и вычислительная техника', '09.06.01'),
(48, 2, 'Математика и механика', '01.06.01'),
(49, 18, 'Экология', '05.03.06'),
(50, 18, 'Экология', '05.04.06'),
(51, 18, 'ПО (География и Биология)', '44.03.05'),
(52, 18, 'ПО (Географическое образование)', '44.04.01'),
(53, 18, 'ПО (География)', '44.03.01'),
(54, 19, 'Экономика', '38.03.01'),
(55, 19, 'Экономика', '38.04.01'),
(56, 19, 'Управление персоналом', '38.03.03'),
(57, 19, 'Управление персоналом', '38.04.03'),
(58, 19, 'Государственное и муниципальное управление', '38.03.04'),
(59, 19, 'Государственное и муниципальное управление', '38.04.04'),
(60, 19, 'Таможенное дело', '38.05.02'),
(61, 8, 'Юриспруденция', '40.03.01'),
(62, 8, 'Юриспруденция', '40.04.01'),
(63, 4, 'История', '46.03.01');

-- --------------------------------------------------------

--
-- Структура таблицы `student`
--

CREATE TABLE `student` (
  `id_student` int NOT NULL,
  `surname` varchar(255) DEFAULT NULL,
  `firstname` varchar(255) DEFAULT NULL,
  `lastname` varchar(255) DEFAULT NULL,
  `phone` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `status` enum('Y','N') DEFAULT 'N',
  `specialty` varchar(10) DEFAULT NULL,
  `namespecialty` varchar(255) NOT NULL,
  `username` varchar(255) DEFAULT NULL,
  `daten` smallint DEFAULT NULL,
  `datek` smallint DEFAULT NULL,
  `id_sotrudnik` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `student`
--

INSERT INTO `student` (`id_student`, `surname`, `firstname`, `lastname`, `phone`, `email`, `status`, `specialty`, `namespecialty`, `username`, `daten`, `datek`, `id_sotrudnik`) VALUES
(137, 'Тестов тест тестович', 'Виктор', 'Игоревич', '+7 968 137 00 70', 'test@mail.ru', 'N', '01.03.02', 'Информационные системы и технологии', '130001', 2015, 2019, 0),
(2790, 'Петров Петр Петрович', '', '', '+70000000000', 'PetrovPP@test.bk.ru', '', '09.03.03', 'Прикладная математика и информатика, Общая направленность', 'student2790', 2018, 2023, 4),
(2791, 'Сидоров Сидор Сидорович', '', '', '+70000000000', 'Sidorov_S_S@mail.ru', '', '09.03.03', 'Прикладная информатика, направленность Прикладная информатика в экономике', 'student2791', 2018, 2023, 0),
(2792, 'Тестов3 Тест Тестович', '', '', '', '', '', '09.03.02', 'Информационные системы и технологии', 'student2792', 2020, 2024, 4);

-- --------------------------------------------------------

--
-- Структура таблицы `traffic`
--

CREATE TABLE `traffic` (
  `id_traffic` int NOT NULL,
  `description` text NOT NULL,
  `datep` date NOT NULL,
  `total` int NOT NULL,
  `id_passage` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `traffic`
--

INSERT INTO `traffic` (`id_traffic`, `description`, `datep`, `total`, `id_passage`) VALUES
(1, 'Разработка структуры базы данных. База данных WordPress.', '2022-06-26', 6, 1),
(2, 'Разработка формы «Информация о сотрудниках»', '2022-06-27', 6, 1);

-- --------------------------------------------------------

--
-- Структура таблицы `typepractice`
--

CREATE TABLE `typepractice` (
  `id_typepractice` int NOT NULL,
  `name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `typepractice`
--

INSERT INTO `typepractice` (`id_typepractice`, `name`) VALUES
(1, 'Учебная: ознакомительная'),
(2, 'Производственная (НИР)'),
(3, 'Производственная (Преддипломная)');

-- --------------------------------------------------------

--
-- Структура таблицы `user`
--

CREATE TABLE `user` (
  `id` int NOT NULL,
  `username` varchar(255) NOT NULL,
  `auth_key` varchar(255) NOT NULL,
  `password_hash` varchar(255) NOT NULL,
  `password_reset_token` varchar(255) DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `status` varchar(50) NOT NULL,
  `created_at` int NOT NULL,
  `updated_at` int NOT NULL,
  `id_student` int NOT NULL,
  `id_sotrudnik` int DEFAULT NULL,
  `role` enum('student','teacher','admin','worker') DEFAULT NULL COMMENT 'S-обучающийся\\r\\nP-преподаватель\\r\\nA-администратор\\r\\nB-любой сотрудник',
  `psw` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `user`
--

INSERT INTO `user` (`id`, `username`, `auth_key`, `password_hash`, `password_reset_token`, `email`, `status`, `created_at`, `updated_at`, `id_student`, `id_sotrudnik`, `role`, `psw`) VALUES
(155, 'gva', '', '$2y$13$eP0yHAEI7qKbLwcYKMmus.X1Hl9zKU4HeMiXgDfVqLNlUZX1ExcwW', '', 'glagolev_jar@mail.ru', '10', 1571488420, 1623028129, 0, 4, NULL, '7eW6So'),
(172, 'admin2', 'axWEH336k-FoVG8MZKipsxk5UZvZNLmX', '$2y$13$.tMFJ1OjxoauDSLoodex6Oh90QaCDKyVcmTLc8ONQX2g9RhOXHtpe', NULL, 'admin2@turbolib.ru', '10', 1669369113, 1669369113, 0, NULL, NULL, ''),
(218, 'testov', '', '$2y$13$tKAzOzOFhReQlw3L2P5uIeVN07NrC/8J2212dThHwK6W9x3Tv1sDC', '', 'testov@mail.ru', '10', 1675053926, 1675057778, 0, 30, NULL, 'ThP1xW'),
(219, 'petrov', '', '$2y$13$Y0dQUfgEFzm6doD2zYOBS.t89BczjX.U8ccVZo68kWua2PlW3k1JG', '', 'petrov@mail.ru', '10', 1675083458, 1675255431, 0, 32, NULL, 'QAwPt-');

-- --------------------------------------------------------

--
-- Структура таблицы `works`
--

CREATE TABLE `works` (
  `id_works` int NOT NULL,
  `id_student` int NOT NULL DEFAULT '0',
  `id_sotrudnik` varchar(255) DEFAULT NULL,
  `datez` date DEFAULT '0000-00-00',
  `name` varchar(255) DEFAULT '0000-00-00',
  `id_speciаlty` int DEFAULT NULL,
  `status` enum('Y','Управление') DEFAULT NULL,
  `typew` enum('Диплом','Диссертация','Публикация','Монография') DEFAULT NULL,
  `ozenka` enum('Не оценивается','Удовлетворительно','Хорошо','Отлично') DEFAULT NULL,
  `mycheckwork` enum('Y','N') DEFAULT NULL,
  `docmycheckwork` varchar(255) DEFAULT NULL,
  `myoriginalwork` float DEFAULT NULL,
  `intercheckwork` enum('Y','N') DEFAULT NULL,
  `docintercheckwork` varchar(255) DEFAULT NULL,
  `interoriginalwork` float DEFAULT NULL,
  `publicwork` enum('Y','N') DEFAULT NULL,
  `filework` varchar(255) DEFAULT NULL,
  `statuswork` enum('autocheck','directcheck','nocheck') DEFAULT NULL,
  `id_podpis` int NOT NULL DEFAULT '0',
  `annotaciy` varchar(255) DEFAULT NULL,
  `zadanie` varchar(255) DEFAULT NULL,
  `otziv` varchar(255) DEFAULT NULL,
  `vnedrenie` varchar(255) DEFAULT NULL,
  `rec` varchar(255) DEFAULT NULL,
  `titul` varchar(255) DEFAULT NULL,
  `soderjanie` varchar(255) DEFAULT NULL,
  `tekst` varchar(255) DEFAULT NULL,
  `priloj` varchar(255) DEFAULT NULL,
  `konecvkr` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `works`
--

INSERT INTO `works` (`id_works`, `id_student`, `id_sotrudnik`, `datez`, `name`, `id_speciаlty`, `status`, `typew`, `ozenka`, `mycheckwork`, `docmycheckwork`, `myoriginalwork`, `intercheckwork`, `docintercheckwork`, `interoriginalwork`, `publicwork`, `filework`, `statuswork`, `id_podpis`, `annotaciy`, `zadanie`, `otziv`, `vnedrenie`, `rec`, `titul`, `soderjanie`, `tekst`, `priloj`, `konecvkr`) VALUES
(815, 0, '1', '2023-04-02', 'Варенник', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(816, 1, '30', '2023-03-01', 'Диплом1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(817, 2, '31', '2023-02-15', 'Диплом 2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(818, 3, '31', '2023-01-11', 'Диплом 4', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(819, 5, '33', '2022-11-17', 'Диплом 5', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `auth_assignment`
--
ALTER TABLE `auth_assignment`
  ADD PRIMARY KEY (`item_name`,`user_id`),
  ADD KEY `idx-auth_assignment-user_id` (`user_id`);

--
-- Индексы таблицы `auth_item`
--
ALTER TABLE `auth_item`
  ADD PRIMARY KEY (`name`),
  ADD KEY `rule_name` (`rule_name`),
  ADD KEY `idx-auth_item-type` (`type`);

--
-- Индексы таблицы `auth_item_child`
--
ALTER TABLE `auth_item_child`
  ADD PRIMARY KEY (`parent`,`child`),
  ADD KEY `child` (`child`);

--
-- Индексы таблицы `auth_rule`
--
ALTER TABLE `auth_rule`
  ADD PRIMARY KEY (`name`);

--
-- Индексы таблицы `briefing`
--
ALTER TABLE `briefing`
  ADD PRIMARY KEY (`id_briefing`);

--
-- Индексы таблицы `comment`
--
ALTER TABLE `comment`
  ADD PRIMARY KEY (`id_comment`);

--
-- Индексы таблицы `company`
--
ALTER TABLE `company`
  ADD PRIMARY KEY (`id_company`);

--
-- Индексы таблицы `department`
--
ALTER TABLE `department`
  ADD PRIMARY KEY (`id_department`);

--
-- Индексы таблицы `dostups`
--
ALTER TABLE `dostups`
  ADD PRIMARY KEY (`id_dostups`);

--
-- Индексы таблицы `edication`
--
ALTER TABLE `edication`
  ADD PRIMARY KEY (`id_edication`);

--
-- Индексы таблицы `faculty`
--
ALTER TABLE `faculty`
  ADD PRIMARY KEY (`id_faculty`);

--
-- Индексы таблицы `gruppa`
--
ALTER TABLE `gruppa`
  ADD PRIMARY KEY (`id_gruppa`);

--
-- Индексы таблицы `migration`
--
ALTER TABLE `migration`
  ADD PRIMARY KEY (`version`);

--
-- Индексы таблицы `news`
--
ALTER TABLE `news`
  ADD PRIMARY KEY (`id_news`);

--
-- Индексы таблицы `passage`
--
ALTER TABLE `passage`
  ADD PRIMARY KEY (`id_passage`);

--
-- Индексы таблицы `portfolio`
--
ALTER TABLE `portfolio`
  ADD PRIMARY KEY (`id_portfolio`);

--
-- Индексы таблицы `practice`
--
ALTER TABLE `practice`
  ADD PRIMARY KEY (`id_practice`);

--
-- Индексы таблицы `setting`
--
ALTER TABLE `setting`
  ADD PRIMARY KEY (`id_setting`);

--
-- Индексы таблицы `sotrudnik`
--
ALTER TABLE `sotrudnik`
  ADD PRIMARY KEY (`id_sotrudnik`);

--
-- Индексы таблицы `specialty`
--
ALTER TABLE `specialty`
  ADD PRIMARY KEY (`id_specialty`);

--
-- Индексы таблицы `student`
--
ALTER TABLE `student`
  ADD PRIMARY KEY (`id_student`);

--
-- Индексы таблицы `traffic`
--
ALTER TABLE `traffic`
  ADD PRIMARY KEY (`id_traffic`);

--
-- Индексы таблицы `typepractice`
--
ALTER TABLE `typepractice`
  ADD PRIMARY KEY (`id_typepractice`);

--
-- Индексы таблицы `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `works`
--
ALTER TABLE `works`
  ADD PRIMARY KEY (`id_works`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `briefing`
--
ALTER TABLE `briefing`
  MODIFY `id_briefing` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT для таблицы `comment`
--
ALTER TABLE `comment`
  MODIFY `id_comment` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `company`
--
ALTER TABLE `company`
  MODIFY `id_company` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT для таблицы `department`
--
ALTER TABLE `department`
  MODIFY `id_department` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- AUTO_INCREMENT для таблицы `dostups`
--
ALTER TABLE `dostups`
  MODIFY `id_dostups` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=41;

--
-- AUTO_INCREMENT для таблицы `edication`
--
ALTER TABLE `edication`
  MODIFY `id_edication` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=25;

--
-- AUTO_INCREMENT для таблицы `faculty`
--
ALTER TABLE `faculty`
  MODIFY `id_faculty` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT для таблицы `gruppa`
--
ALTER TABLE `gruppa`
  MODIFY `id_gruppa` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT для таблицы `news`
--
ALTER TABLE `news`
  MODIFY `id_news` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT для таблицы `passage`
--
ALTER TABLE `passage`
  MODIFY `id_passage` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT для таблицы `portfolio`
--
ALTER TABLE `portfolio`
  MODIFY `id_portfolio` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=38;

--
-- AUTO_INCREMENT для таблицы `practice`
--
ALTER TABLE `practice`
  MODIFY `id_practice` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT для таблицы `setting`
--
ALTER TABLE `setting`
  MODIFY `id_setting` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `sotrudnik`
--
ALTER TABLE `sotrudnik`
  MODIFY `id_sotrudnik` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;

--
-- AUTO_INCREMENT для таблицы `specialty`
--
ALTER TABLE `specialty`
  MODIFY `id_specialty` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=64;

--
-- AUTO_INCREMENT для таблицы `student`
--
ALTER TABLE `student`
  MODIFY `id_student` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2793;

--
-- AUTO_INCREMENT для таблицы `traffic`
--
ALTER TABLE `traffic`
  MODIFY `id_traffic` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT для таблицы `typepractice`
--
ALTER TABLE `typepractice`
  MODIFY `id_typepractice` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `user`
--
ALTER TABLE `user`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=220;

--
-- AUTO_INCREMENT для таблицы `works`
--
ALTER TABLE `works`
  MODIFY `id_works` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=820;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `auth_assignment`
--
ALTER TABLE `auth_assignment`
  ADD CONSTRAINT `auth_assignment_ibfk_1` FOREIGN KEY (`item_name`) REFERENCES `auth_item` (`name`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `auth_item`
--
ALTER TABLE `auth_item`
  ADD CONSTRAINT `auth_item_ibfk_1` FOREIGN KEY (`rule_name`) REFERENCES `auth_rule` (`name`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `auth_item_child`
--
ALTER TABLE `auth_item_child`
  ADD CONSTRAINT `auth_item_child_ibfk_1` FOREIGN KEY (`parent`) REFERENCES `auth_item` (`name`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `auth_item_child_ibfk_2` FOREIGN KEY (`child`) REFERENCES `auth_item` (`name`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
